import { IOperandDefinition } from '../interfaces/IOperandDefinition';
import { EnumOperandDirection } from '../enums/EnumOperandDirection';

export const OperandDefinitions: IOperandDefinition[] = [
    { Precedence: 1, Key: "()", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, IsGrouping: true, Description: "Grouping" },
    { Precedence: 2, Key: "!", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: false, ThereIsRighParameter: true, Description: "Logical NOT", },
    { Precedence: 3, Key: "**", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Exponentiation", },
    { Precedence: 4, Key: "*", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Multiplication", },
    { Precedence: 4, Key: "/", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Division", },
    { Precedence: 4, Key: "%", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Remainder", },
    { Precedence: 5, Key: "+", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Addition", },
    { Precedence: 5, Key: "-", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Subtraction", },
    { Precedence: 6, Key: "<", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Less Than", },
    { Precedence: 6, Key: "<=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Less Than Or Equal", },
    { Precedence: 6, Key: ">", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Greater Than", },
    { Precedence: 6, Key: ">=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Greater Than Or Equal", },
    { Precedence: 7, Key: "==", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Equality", },
    { Precedence: 7, Key: "!=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Inequality", },
    { Precedence: 7, Key: "===", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Strict Equality", },
    { Precedence: 7, Key: "!==", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Strict Inequality", },
    { Precedence: 8, Key: "&", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Bitwise AND", },
    { Precedence: 9, Key: "^", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Bitwise XOR", },
    { Precedence: 10, Key: "|", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Bitwise OR", },
    { Precedence: 11, Key: "&&", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Logical AND", },
    { Precedence: 12, Key: "||", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Logical OR", },
    { Precedence: 13, Key: "=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "+=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "-=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "**=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "*=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "/=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "%=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "&=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "^=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
    { Precedence: 13, Key: "|=", Direction: EnumOperandDirection.LeftToRight, ThereIsLeftParameter: true, ThereIsRighParameter: true, Description: "Assignment", },
];
